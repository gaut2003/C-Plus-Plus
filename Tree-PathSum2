/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> solve(TreeNode* root, int sum){
        if(!root) return {};
        if(!root->left && !root->right){
            if(sum==root->val){
                vector<vector<int>> ret = {{root->val}};
                return ret;
            }
            return {};
        }
        vector<vector<int>> ret, l, r;
        l = solve(root->left,sum-root->val);
        r = solve(root->right,sum-root->val);
        
        for(auto val:l){
            val.insert(val.begin(),root->val);
            ret.emplace_back(val);
        }
        for(auto val:r){
            val.insert(val.begin(),root->val);
            ret.emplace_back(val);
        }
        return ret;
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        return solve(root,targetSum);
    }
};
